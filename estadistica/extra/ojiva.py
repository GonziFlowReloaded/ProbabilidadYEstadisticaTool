import math
import numpy as np
import matplotlib.pyplot as plt
import statistics as stat
from prettytable import PrettyTable

datos = """
217.4833333
272.55
265.2833333
256.15
252.25
201.9666667
283.5666667
255.8833333
264.25
306.6833333
281.2666667
280.25
258.3333333
257.1333333
163.9333333
253.6166667
206.2666667
257.9333333
262.1333333
264.2166667
209.7333333
265.25
315.2333333
414.7
309.2666667
261.2666667
295.3166667
294.8333333
254.25
248.95
164.5
334.0166667
210.9
271.0666667
226.4666667
256.7166667
264.8333333
219.1333333
237.7
184.3
253.75
267.4666667
289.6166667
256.9666667
288.0333333
277.4
316.3333333
271.3666667
248.0833333
186.45
237.2
318.6333333
431.6166667
227.0166667
353.1
284.0166667
407.4333333
252.6333333
283.75
218.3833333
207.0166667
467.1833333
231.4166667
265.1333333
177.3666667
292.1333333
234.2
264.5
221.3833333
247.3166667
236.2333333
235.7333333
284.25
232.3833333
265.1166667
230.4166667
327.1666667
321.55
268.9666667
258.5333333
249.2666667
326.9333333
268.1833333
256.9833333
256.5
263.85
276.5
306.4166667
239.55
259.2
277.6833333
219.7666667
227.2
272.2166667
175.3666667
254.5333333
226.7666667
219.05
204.6333333
305.2833333
262.7666667
238.95
328.9333333
173.6
287.6333333
389
226.8
229.3166667
244.3
284.8166667
234.5833333
178.5833333
262.6833333
259.2333333
247.95
408.3333333
179.5166667
394.0833333
251.3666667
197.2
230.35
268.4166667
228.2833333
248.0333333
177.7166667
266.8333333
291.3833333
209.0666667
369.35
326.7
258.0333333
371.9833333
325.95
252.3666667
286.8166667
177.6333333
326.05
276.65
246.9666667
225.0833333
273.9833333
271.9666667
270.6666667
201.95
270.05
320.5333333
236.4333333
258
247.4166667
264.9166667
187.4166667
189.4666667
430.8166667
426.8833333
297.2
460.8
289.2666667
271.0666667
223.05
256.4833333
332.2333333
290.3
247.9333333
199.5833333
353.2166667
369.35
307.5333333
235.0833333
299.1333333
229.5166667
271.3666667
274.4333333
251.85
261.8333333
238.3333333
433.8833333
220.25
231.8
237.5333333
244.95
322.9833333
244.8833333
234.0166667
272.9833333
259.6166667
251.7833333
280.0666667
370.6
277.6
277.6833333
253.2833333
274.8833333
324.15
341.7666667
350.25
295.5
245.5166667
293.6666667
302.55
275.1
282.6
330.5666667
242.15
168.1833333
244.7166667
246.2666667
278.8
173.15
279.8166667
214.6333333
278.2166667
244.7666667
268.0666667
269.95
195.35
272.4
276.7833333
198.2166667
272.0166667
298.35
262.6833333
330.6166667
265.4
253.3
224.65
295.7166667
291.0666667
218.2833333
289.7
238.2333333
251.0833333
366.5833333
238.25
207.15
313.3
310.7166667
235.5333333
265.5
224.7166667
186.9166667
239.0666667
300.0166667
270.0333333
181.9
305.95
439.8333333
205.2666667
296.6333333
258.7
302.6833333
281.1333333
230.05
248.7666667
227.8
258.15
272.15
243.6
290.6166667
306.2833333
288.55
189.8166667
257.7833333
259.2833333
454.65
212.65
223.4333333
285.6166667
270.0666667
247.1333333
256.2
239.4166667
226.2333333
387.4
293.0166667
233.4833333
250.4333333
316.7
288.8166667
272.4666667
258.3333333
321.8666667
382.9333333
305.7333333
272.5666667
271.4
321.35
204.9333333
272.8166667
217.4666667
287.8666667
293.05
210.65
217.35
230.75
237.8833333
221.15
379.85
398.2666667
283.7833333
191.05
290.3333333
230.1
233.3833333
235.4833333
304.9666667
273.5166667
315.75
234.3166667
225.2833333
254.2166667
434.1833333
238.85
233.75
258.9166667
262.3666667
244.05
302.5166667
330.0666667
359.45
316.0333333
404.55
208.7833333
219.5
229.35
230.5333333
318.05
233.45
423.0166667
321.2333333
254.0666667
240.0333333
334.2166667
247.2833333
214.3666667
275.9166667
305.6333333
298.1833333
202.5333333
268.2333333
205.1833333
312.5
218.9666667
218.6666667
325.6
295.2
284.4
251.9666667
258.4
247.1666667
332.8166667
224.8666667
242.2666667
201.4666667
239.0833333
298.3333333
283.7666667
263.2
305.9
244.5666667
282.25
189.8833333
230.1333333
310.2
332.6833333
234.3
285.2833333
508.0833333
296.45
226.4333333
246.85
359.4666667
224.4166667
241.5666667
266.45
291.6166667
234.0166667
187.7333333
333.2833333
319.0333333
313.3666667
305.3
250.8
206.5666667
250.95
264.9833333
288.0666667
350.7833333
379.3
363.4666667
215.1333333
251.8333333
343.6
240.6833333
339.05
295.5166667
274.2333333
277.7666667
224.8
302.4666667
265.7666667
220.5833333
212.1666667
242.4
258.9666667
277.55
339.9833333
253.3166667
287.4666667
330.4166667
224.5333333
247.75
186.3833333
245.4
169.6666667
249.2
177.6166667
261.8
330.8
225.45
328
292.8666667
262.95
283.8
313.1666667
270.2
284.4
268.5166667
347.6333333
173.3666667
316.5666667
244.45
266.1
211.7
193.2
337.9666667
290.45
221.35
237.45
296.9166667
225.7
282.1
219.4333333
299.9
218.2333333
321.4166667
176.2333333
332.2
566.7833333
291.1666667
291.2166667
332.3
252.5333333
294.0166667
171.5666667
311.4833333
340.4166667
224.3
252.3
256.9833333
254.8333333
265.0166667
234.3166667
182.7
359.8666667
245.2833333
221.6833333
240.4666667
294.9166667
250.7166667
280.3666667
312.2166667
279.0333333
262.1166667
331.1333333
361.6666667
228.9666667
239.1333333
265.3
282.7666667
332.6833333
258.5
298.3166667
220.3
332.3833333
277.3833333
316.7666667
239.4833333
313.75
256.2666667
207.5
299.3
275.0333333
208.1666667
280.1
237.8666667
248.5166667
194.95
222.7833333
260.8333333
220.5166667
236.7666667
236.0833333
214.7
278.3333333
248.4
208.75
272.3833333
193.3166667
329.25
234.3166667
209.5666667
290.9333333
338.8166667
275.0333333
240.1
273.0666667
365.5666667
279.0833333
329.8166667
241.8166667
293.9666667
206.25
249.6833333
213.05
296.2833333
301.4666667
209.95
287
295.4166667
201.75
243.4666667
247.3833333
222.95
214.8666667
291.6166667
217.4333333
235.1166667
275.7833333
281.2166667
261.9
289.6666667
301.4166667
264.3333333
355.8666667
256.15
280.8833333
259.0666667
287.8833333
272.1666667
264.0833333
232.6333333
268.4
237
243.2
294.1166667
283.7833333
270.6333333
308.2666667
222.2
219.9333333
260.4833333
233.5666667
293.0666667
333.3666667
295.2666667
289.0666667
291.7
218.7833333
290.7
226.55
361.85
272.05
285.0666667
266.3833333
440.7666667
237.25
195.1
270.5
379.2166667
288.4833333
299.3
326.45
288.9666667
239.45
491.5666667
241.7166667
216.9166667
221.7833333
224.7
317.3166667
220.65
180.7833333
349.1
225.3833333
291
217.0833333
294.2833333
230.2833333
222.0333333
325
293.05
299.9166667
262.2
306.6
190.9333333
157.5833333
244.95
241.5666667
208
268.0833333
258.1166667
251.8333333
220.45
261.7
288.7833333
242.5166667
296.3333333
314.05
165.5166667
247.9833333
284.0833333
286.5166667
246.4333333
275.8333333
315.7666667
180.7
231.1333333
370.2
229.15
235.8833333
259.7333333
233.7833333
225.0833333
249.0333333
331.15
257.05
203.3833333
339.0666667
258.3333333
262.4333333
288.5666667
267.6166667
216.5166667
183.1166667
294.65
249.3833333
316.75
275.6166667
271.6333333
208.2
293.85
217.15
183.45
316.85
240.35
248.3
253.5666667
223.3833333
193.4166667
414.9833333
274.2833333
201.05
302.3
249.3166667
275.0666667
255.8166667
245.2
243.7666667
415.1333333
243.15
225.75
248.9
228.35
343.4833333
213.9166667
305.2333333
224.0166667
271.2833333
279.3166667
269.05
227.2166667
317.85
200.9666667
225.8333333
272.5
295.4
189.3333333
339.6833333
276.95
311.5666667
303.2166667
315.3333333
270
209.2333333
280.9
262.9166667
261.0666667
241.15
221.9833333
272.6666667
298.9833333
271.75
225.5833333
237.75
182.7666667
217.9166667
260.3166667
262.5833333
325.3333333
233.95
400.7166667
230.7333333
301.7166667
348.3
193.05
242.9833333
278.8666667
300.4666667
215.1
341.7166667
239.7666667
343.85
323.05
245.4833333
436.2333333
342.9333333
271.35
289.7166667
353.2666667
478.0166667
224.65
263.4666667
251.1333333
278.2833333
290.75
288.2833333
299.9666667
250.15
411.5666667
176.05
230.75
273.2666667
223.15
256.55
190.4
280.6
246.3333333
324.2166667
294.6
262.35
416.9666667
242.6333333
224.45
263.8666667
223.55
287.5333333
201.35
319.4333333
244.85
255.0333333
242.2833333
220.0166667
340.65
259.1
147.3333333
222.8666667
235.6666667
171.2833333
271.5
285.5166667
258.25
334.2166667
261.8333333
289.15
269.9666667
292.2333333
237.1833333
275.35
298.0166667
411.1833333
248.6
205.5666667
346.2833333
294.9666667
305.1166667
271.8
230.3333333
224.0666667
316.5
274.6333333
248.2
347.7666667
274.25
249.2833333
329.45
236.4333333
313.1166667
274.0333333
240.4166667
285.85
275.3
310.05
271.8166667
348.0833333
258.5833333
252.8333333
238.6666667
238.1666667
202.4333333
213.9666667
234.65
200.3166667
277.0833333
302.5
253.5666667
259.7666667
322.7666667
258.7166667
328.5
255.6166667
329.6833333
218.0166667
309.7166667
284.2333333
231.4166667
352.3666667
291.2666667
303.45
303.2666667
293.5333333
252.0666667
254.4333333
235.9
215.6666667
305.05
174.7666667
294.1
267.05
385.1666667
313.15
264.8833333
312
175.7666667
215.1
312.55
238.25
315.9666667
193.6833333
217.4833333
279.3166667
248.55
218.7166667
221.85
277.6333333
243.4333333
347.3166667
258.0166667
279.05
276.9
184.2
224.5833333
236.0166667
207.1666667
275.2666667
297.2
254.45
244.6
265.3166667
225.3333333
253.6333333
180.75
251.4333333
194.0666667
273.8666667
240.9
290.1333333
390
283.0833333
239.2666667
218.2666667
304.4
191.1333333
226.7333333
219.7833333
233.9166667
315.35
258.4
175.5333333
304.8333333
200.55
298.5833333
213.05
247.95
328.9333333
283.6333333
195.2833333
297.5666667
221.9166667
250.9166667
270.8
236.9833333
329.3333333
256.5833333
257.55
475.3666667
258.6666667
272.6666667
299.8
247.7666667
249.4833333
374.25
264.5833333
285
228.4666667
232.9
227.4166667
221.5166667
269.9166667
328.2333333
344.1
240.9333333
219.9
189.6833333
281.7833333
189.1
287.1
221.35
351.3166667
259.4333333
297.8666667
235.0333333
186.7833333
336.75
205.35
206.3333333
301
298.2333333
296.6333333
333.5833333
277.6833333
278.15
274.65
270.7
248.55
228.1333333
227.4
276.5666667
222.9833333
269.6333333
250.3
242.5166667
207.65
177.0833333
300.2666667
326.75
257.8833333
245.1833333
298.7666667
261.7666667
213.7666667
197.8833333
349.85
253.9833333
272.5
156
239.8
225.3
292.4833333
353.5666667
264.1166667
281.4
331.7
235.8
376.65
284.3166667
380.6833333
316.8166667
273
251.5833333
206.1333333
298.4
275.55
270.2833333
200.55
285.25
324.6666667
273.7
267.6333333
191.3166667
273.0333333
501.55
285.35
278.1166667
263.3833333
223.3333333
285.8833333
191.9166667
289.0166667
276.05
240.9666667
"""

# elementos = datos.replace(',', '').split()
elementos = datos.replace(',', '.').split()


arr_np = np.array(elementos, dtype=np.float32)


mayor = arr_np.max()
menor = arr_np.min()
arr_np = sorted(arr_np)
k = 1 + 3.322 * math.log10(len(elementos))
k = round(k)


l = (float(mayor) - float(menor)) / k
l = round(l)

print("El valor de k es: ", k)
print("El valor de l(amplitud) es: ", l)
rango = mayor - menor

def sturges_bins(data):
    n = len(data)
    k = int(1 + np.log2(n))
    range_data = max(data) - min(data)
    
    bin_width = range_data / k
    
    bins = []
    for i in range(k):
        bins.append(min(data) + i * bin_width)
    bins.append(max(data))



        
    return bins

intervalovichs = sturges_bins(arr_np)
print(intervalovichs)


def tabla_frecuencias(intervalos, frecuencias):
    tabla = PrettyTable(['Intervalo', 'Frecuencia', 'Fre. relativa', 'Fre. acumulada', 'Fre. relativa acumulada'])
    for i in range(len(intervalos)):
        try:
            tabla.add_row([f'{intervalos[i]}', f'{frecuencias[i]}', f'{round(frecuencias[i]/len(arr_np), ndigits=3)}', f'{sum(frecuencias[:i+1])}', f'{round(sum(frecuencias[:i+1])/len(arr_np), ndigits=3)}'])
        except IndexError:
            pass
    tabla.add_row(['Total', f'{len(arr_np)}', f'{round(sum(frecuencias)/len(arr_np), ndigits=3)}', f'{sum(frecuencias)}', f'{round(sum(frecuencias)/len(arr_np), ndigits=3)}'])
    
    print(tabla)
def contar_frecuencias(intervalos, datos):
    auxIntervalos = list(zip(intervalos[:-1], intervalos[1:]))
    frecuencias = [sum(1 for dato in datos if intervalo[0] <= dato < intervalo[1]) for intervalo in auxIntervalos]
    maximos = 0
    maximo = max(datos)
    for dato in datos:
        if dato == maximo:
            maximos += 1
    
    frecuencias[len(frecuencias)-1] += maximos
    return frecuencias, auxIntervalos



def str_intervalos(intervalos):
    str_intervalos = []
    for i in range(len(intervalos)):
        str_intervalos.append(str([round(intervalos[i][0], ndigits=3),round(intervalos[i][1], ndigits=3)]))
    return str_intervalos

frecuencias, intervalosComplejos = contar_frecuencias(intervalovichs, arr_np)
#Eliminar el ultimo elemento de la lista de frecuencias
# frecuencias.pop()

30 == sum(frecuencias)

intervalosString = str_intervalos(intervalosComplejos)
auxIntervalo = []
for i in range(len(intervalovichs)-1):
    auxIntervalo.append(intervalovichs[i])


def marcas_de_clase(intervalos):
    marcas = []
    for intervalo in intervalos:
        marca = (intervalo[0] + intervalo[1]) / 2
        marcas.append(marca)
    return marcas

def acumularFrecuencias(frecuencias):
    acumuladas = []
    for i in range(len(frecuencias)):
        acumuladas.append(sum(frecuencias[:i+1]))
    return acumuladas


#Grafico de ojiva
marcas = marcas_de_clase(intervalosComplejos)
print(marcas)

marcasStr = []  
for marca in marcas:
    marcasStr.append(str(round(marca, ndigits=3)))


freqAcum = acumularFrecuencias(frecuencias)
plt.plot(marcasStr, freqAcum, 'o-')
plt.title('Grafico de ojiva')
plt.xlabel('Intervalos de clase')
plt.ylabel('Frecuencia')
plt.show()

